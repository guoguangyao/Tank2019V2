import java.awt.*;import java.awt.event.KeyAdapter;import java.awt.event.KeyEvent;import java.awt.event.AWTEventListener;public class TankFrame extends Frame {    private Tank myTank;    private Tank enemy;    public TankFrame() {        this.setTitle("Tank war");        this.setLocation(400, 100);        this.setSize(800, 600);        this.addKeyListener(new TankKeyListener());  //Observer观察者模式        myTank = new Tank(100,100,Direction.UP);        enemy = new Tank(200,200,Direction.LEFT);    }    /*    * @Override 的作用是：如果想重写父类的方法，比如toString()方法的话，    * 在方法前面加上@Override 系统可以帮你检查方法的正确性。    * Override的用法：Override：java.lang.    * Override是一个marker annotation类型，它被用作标注方法。    * 它说明了被标注的方法重载了父类的方法，起到了断言的作用。    * */    @Override    public void paint(Graphics g){        myTank.paint(g);        enemy.paint(g);    }    // 使用内部类，创建监听类————不需要让别的类访问键盘监听类，高类聚，低耦合的设计思想    private class TankKeyListener extends KeyAdapter {   // 此处使用继承KeyAapter类，而非实现KryListener接口，并不是适配器adapt模式        @Override        public void keyPressed(KeyEvent e) {            myTank.keyPressed(e);            }        @Override        public void keyReleased(KeyEvent e){            myTank.keyReleased(e);        }        }    }